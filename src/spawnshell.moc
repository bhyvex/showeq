/****************************************************************************
** Meta object code from reading C++ file 'spawnshell.h'
**
** Created: Thu Feb 19 01:03:12 2009
**      by: The Qt Meta Object Compiler version 59 (Qt 4.4.3)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "spawnshell.h"
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'spawnshell.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 59
#error "This file was generated using the moc from 4.4.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_SpawnShell[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
      39,   10, // methods
       0,    0, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
      17,   12,   11,   11, 0x05,
      38,   12,   11,   11, 0x05,
      75,   59,   11,   11, 0x05,
     133,  108,   11,   11, 0x05,
     177,   12,   11,   11, 0x05,
     202,   12,   11,   11, 0x05,
     231,   11,   11,   11, 0x05,
     244,   11,   11,   11, 0x05,

 // slots: signature, parameters, type, tag, flags
     259,   11,   11,   11, 0x0a,
     270,  267,   11,   11, 0x0a,
     315,  267,   11,   11, 0x0a,
     363,  267,   11,   11, 0x0a,
     408,  267,   11,   11, 0x0a,
     460,  448,   11,   11, 0x0a,
     504,  494,   11,   11, 0x0a,
     543,  537,   11,   11, 0x0a,
     570,  568,   11,   11, 0x0a,
     602,  592,   11,   11, 0x0a,
     658,  646,   11,   11, 0x0a,
     758,  703,   11,   11, 0x0a,
     858,  850,   11,   11, 0x0a,
     899,  887,   11,   11, 0x0a,
     944,  931,   11,   11, 0x0a,
     987,  972,   11,   11, 0x0a,
    1034, 1017,   11,   11, 0x0a,
    1086, 1072,   11,   11, 0x0a,
    1138, 1129,   11,   11, 0x0a,
    1174, 1166,   11,   11, 0x0a,
    1215, 1209,   11,   11, 0x0a,
    1274, 1258,   11,   11, 0x0a,
    1326, 1317,   11,   11, 0x0a,
    1364, 1354,   11,   11, 0x0a,
    1406, 1390,   11,   11, 0x0a,
    1464, 1454,   11,   11, 0x0a,
    1499, 1490,   11,   11, 0x0a,
    1525,   11,   11,   11, 0x0a,
    1542,   11,   11,   11, 0x0a,
    1566,   11,   11,   11, 0x0a,
    1579,   11,   11,   11, 0x0a,

       0        // eod
};

static const char qt_meta_stringdata_SpawnShell[] = {
    "SpawnShell\0\0item\0addItem(const Item*)\0"
    "delItem(const Item*)\0item,changeType\0"
    "changeItem(const Item*,uint32_t)\0"
    "deceased,killer,killerId\0"
    "killSpawn(const Item*,const Item*,uint16_t)\0"
    "selectSpawn(const Item*)\0"
    "spawnConsidered(const Item*)\0clearItems()\0"
    "numSpawns(int)\0clear()\0,,\0"
    "newGroundItem(const uint8_t*,size_t,uint8_t)\0"
    "removeGroundItem(const uint8_t*,size_t,uint8_t)\0"
    "newDoorSpawns(const uint8_t*,size_t,uint8_t)\0"
    "newDoorSpawn(doorStruct,size_t,uint8_t)\0"
    "zspawns,len\0zoneSpawns(const uint8_t*,size_t)\0"
    "spawn,len\0zoneEntry(const uint8_t*,size_t)\0"
    "spawn\0newSpawn(const uint8_t*)\0s\0"
    "newSpawn(spawnStruct)\0pupdate,,\0"
    "playerUpdate(const uint8_t*,size_t,uint8_t)\0"
    "npcupdate,,\0npcMoveUpdate(const uint8_t*,size_t,uint8_t)\0"
    "id,x,y,z,xVel,yVel,zVel,heading,deltaHeading,animation\0"
    "updateSpawn(uint16_t,int16_t,int16_t,int16_t,int16_t,int16_t,int16_t,i"
    "nt8_t,int8_t,uint8_t)\0"
    "updates\0updateSpawns(const uint8_t*)\0"
    "spawnupdate\0updateSpawnInfo(const uint8_t*)\0"
    "renameupdate\0renameSpawn(const uint8_t*)\0"
    "illusionupdate\0illusionSpawn(const uint8_t*)\0"
    "appearanceupdate\0updateSpawnAppearance(const uint8_t*)\0"
    "spawnupdate,,\0shroudSpawn(const uint8_t*,size_t,uint8_t)\0"
    "hpupdate\0updateNpcHP(const uint8_t*)\0"
    "wearing\0spawnWearingUpdate(const uint8_t*)\0"
    "con,,\0consMessage(const uint8_t*,size_t,uint8_t)\0"
    "rmSpawn,len,dir\0"
    "removeSpawn(const uint8_t*,size_t,uint8_t)\0"
    "delSpawn\0deleteSpawn(const uint8_t*)\0"
    "deadspawn\0killSpawn(const uint8_t*)\0"
    "respawn,len,dir\0"
    "respawnFromHover(const uint8_t*,size_t,uint8_t)\0"
    "corpseLoc\0corpseLoc(const uint8_t*)\0"
    "playerID\0playerChangedID(uint16_t)\0"
    "refilterSpawns()\0refilterSpawnsRuntime()\0"
    "saveSpawns()\0restoreSpawns()\0"
};

const QMetaObject SpawnShell::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_SpawnShell,
      qt_meta_data_SpawnShell, 0 }
};

const QMetaObject *SpawnShell::metaObject() const
{
    return &staticMetaObject;
}

void *SpawnShell::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_SpawnShell))
        return static_cast<void*>(const_cast< SpawnShell*>(this));
    return QObject::qt_metacast(_clname);
}

int SpawnShell::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        switch (_id) {
        case 0: addItem((*reinterpret_cast< const Item*(*)>(_a[1]))); break;
        case 1: delItem((*reinterpret_cast< const Item*(*)>(_a[1]))); break;
        case 2: changeItem((*reinterpret_cast< const Item*(*)>(_a[1])),(*reinterpret_cast< uint32_t(*)>(_a[2]))); break;
        case 3: killSpawn((*reinterpret_cast< const Item*(*)>(_a[1])),(*reinterpret_cast< const Item*(*)>(_a[2])),(*reinterpret_cast< uint16_t(*)>(_a[3]))); break;
        case 4: selectSpawn((*reinterpret_cast< const Item*(*)>(_a[1]))); break;
        case 5: spawnConsidered((*reinterpret_cast< const Item*(*)>(_a[1]))); break;
        case 6: clearItems(); break;
        case 7: numSpawns((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 8: clear(); break;
        case 9: newGroundItem((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3]))); break;
        case 10: removeGroundItem((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3]))); break;
        case 11: newDoorSpawns((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3]))); break;
        case 12: newDoorSpawn((*reinterpret_cast< const doorStruct(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3]))); break;
        case 13: zoneSpawns((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2]))); break;
        case 14: zoneEntry((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2]))); break;
        case 15: newSpawn((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 16: newSpawn((*reinterpret_cast< const spawnStruct(*)>(_a[1]))); break;
        case 17: playerUpdate((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3]))); break;
        case 18: npcMoveUpdate((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3]))); break;
        case 19: updateSpawn((*reinterpret_cast< uint16_t(*)>(_a[1])),(*reinterpret_cast< int16_t(*)>(_a[2])),(*reinterpret_cast< int16_t(*)>(_a[3])),(*reinterpret_cast< int16_t(*)>(_a[4])),(*reinterpret_cast< int16_t(*)>(_a[5])),(*reinterpret_cast< int16_t(*)>(_a[6])),(*reinterpret_cast< int16_t(*)>(_a[7])),(*reinterpret_cast< int8_t(*)>(_a[8])),(*reinterpret_cast< int8_t(*)>(_a[9])),(*reinterpret_cast< uint8_t(*)>(_a[10]))); break;
        case 20: updateSpawns((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 21: updateSpawnInfo((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 22: renameSpawn((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 23: illusionSpawn((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 24: updateSpawnAppearance((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 25: shroudSpawn((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3]))); break;
        case 26: updateNpcHP((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 27: spawnWearingUpdate((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 28: consMessage((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3]))); break;
        case 29: removeSpawn((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3]))); break;
        case 30: deleteSpawn((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 31: killSpawn((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 32: respawnFromHover((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3]))); break;
        case 33: corpseLoc((*reinterpret_cast< const uint8_t*(*)>(_a[1]))); break;
        case 34: playerChangedID((*reinterpret_cast< uint16_t(*)>(_a[1]))); break;
        case 35: refilterSpawns(); break;
        case 36: refilterSpawnsRuntime(); break;
        case 37: saveSpawns(); break;
        case 38: restoreSpawns(); break;
        }
        _id -= 39;
    }
    return _id;
}

// SIGNAL 0
void SpawnShell::addItem(const Item * _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void SpawnShell::delItem(const Item * _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void SpawnShell::changeItem(const Item * _t1, uint32_t _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void SpawnShell::killSpawn(const Item * _t1, const Item * _t2, uint16_t _t3)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}

// SIGNAL 4
void SpawnShell::selectSpawn(const Item * _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 4, _a);
}

// SIGNAL 5
void SpawnShell::spawnConsidered(const Item * _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 5, _a);
}

// SIGNAL 6
void SpawnShell::clearItems()
{
    QMetaObject::activate(this, &staticMetaObject, 6, 0);
}

// SIGNAL 7
void SpawnShell::numSpawns(int _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 7, _a);
}
QT_END_MOC_NAMESPACE
