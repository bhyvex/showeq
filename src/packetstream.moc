/****************************************************************************
** Meta object code from reading C++ file 'packetstream.h'
**
** Created: Thu Feb 19 01:03:13 2009
**      by: The Qt Meta Object Compiler version 59 (Qt 4.4.3)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "packetstream.h"
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'packetstream.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 59
#error "This file was generated using the moc from 4.4.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_EQPacketStream[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
      14,   10, // methods
       0,    0, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
      36,   16,   15,   15, 0x05,
     118,   86,   15,   15, 0x05,
     234,  194,   15,   15, 0x05,
     334,  315,   15,   15, 0x05,
     363,   15,   15,   15, 0x05,
     417,  395,   15,   15, 0x05,
     481,  451,   15,   15, 0x05,
     524,  522,   15,   15, 0x05,
     543,  522,   15,   15, 0x05,
     563,  522,   15,   15, 0x05,
     582,  522,   15,   15, 0x05,
     601,  522,   15,   15, 0x05,
     622,  522,   15,   15, 0x05,

 // slots: signature, parameters, type, tag, flags
     644,  641,   15,   15, 0x0a,

       0        // eod
};

static const char qt_meta_stringdata_EQPacketStream[] = {
    "EQPacketStream\0\0data,len,dir,opcode\0"
    "rawPacket(const uint8_t*,size_t,uint8_t,uint16_t)\0"
    "data,len,dir,opcode,opcodeEntry\0"
    "decodedPacket(const uint8_t*,size_t,uint8_t,uint16_t,const EQPacketOPC"
    "ode*)\0"
    "data,len,dir,opcode,opcodeEntry,unknown\0"
    "decodedPacket(const uint8_t*,size_t,uint8_t,uint16_t,const EQPacketOPC"
    "ode*,bool)\0"
    "sessionId,streamId\0closing(uint32_t,EQStreamID)\0"
    "sessionTrackingChanged(uint8_t)\0"
    "serverPort,clientPort\0"
    "lockOnClient(in_port_t,in_port_t)\0"
    "sessionId,streadid,sessionKey\0"
    "sessionKey(uint32_t,EQStreamID,uint32_t)\0"
    ",\0cacheSize(int,int)\0seqReceive(int,int)\0"
    "seqExpect(int,int)\0numPacket(int,int)\0"
    "resetPacket(int,int)\0maxLength(int,int)\0"
    "pf\0handlePacket(EQUDPIPPacketFormat&)\0"
};

const QMetaObject EQPacketStream::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_EQPacketStream,
      qt_meta_data_EQPacketStream, 0 }
};

const QMetaObject *EQPacketStream::metaObject() const
{
    return &staticMetaObject;
}

void *EQPacketStream::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_EQPacketStream))
        return static_cast<void*>(const_cast< EQPacketStream*>(this));
    return QObject::qt_metacast(_clname);
}

int EQPacketStream::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        switch (_id) {
        case 0: rawPacket((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3])),(*reinterpret_cast< uint16_t(*)>(_a[4]))); break;
        case 1: decodedPacket((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3])),(*reinterpret_cast< uint16_t(*)>(_a[4])),(*reinterpret_cast< const EQPacketOPCode*(*)>(_a[5]))); break;
        case 2: decodedPacket((*reinterpret_cast< const uint8_t*(*)>(_a[1])),(*reinterpret_cast< size_t(*)>(_a[2])),(*reinterpret_cast< uint8_t(*)>(_a[3])),(*reinterpret_cast< uint16_t(*)>(_a[4])),(*reinterpret_cast< const EQPacketOPCode*(*)>(_a[5])),(*reinterpret_cast< bool(*)>(_a[6]))); break;
        case 3: closing((*reinterpret_cast< uint32_t(*)>(_a[1])),(*reinterpret_cast< EQStreamID(*)>(_a[2]))); break;
        case 4: sessionTrackingChanged((*reinterpret_cast< uint8_t(*)>(_a[1]))); break;
        case 5: lockOnClient((*reinterpret_cast< in_port_t(*)>(_a[1])),(*reinterpret_cast< in_port_t(*)>(_a[2]))); break;
        case 6: sessionKey((*reinterpret_cast< uint32_t(*)>(_a[1])),(*reinterpret_cast< EQStreamID(*)>(_a[2])),(*reinterpret_cast< uint32_t(*)>(_a[3]))); break;
        case 7: cacheSize((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 8: seqReceive((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 9: seqExpect((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 10: numPacket((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 11: resetPacket((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 12: maxLength((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 13: handlePacket((*reinterpret_cast< EQUDPIPPacketFormat(*)>(_a[1]))); break;
        }
        _id -= 14;
    }
    return _id;
}

// SIGNAL 0
void EQPacketStream::rawPacket(const uint8_t * _t1, size_t _t2, uint8_t _t3, uint16_t _t4)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)), const_cast<void*>(reinterpret_cast<const void*>(&_t4)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void EQPacketStream::decodedPacket(const uint8_t * _t1, size_t _t2, uint8_t _t3, uint16_t _t4, const EQPacketOPCode * _t5)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)), const_cast<void*>(reinterpret_cast<const void*>(&_t4)), const_cast<void*>(reinterpret_cast<const void*>(&_t5)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void EQPacketStream::decodedPacket(const uint8_t * _t1, size_t _t2, uint8_t _t3, uint16_t _t4, const EQPacketOPCode * _t5, bool _t6)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)), const_cast<void*>(reinterpret_cast<const void*>(&_t4)), const_cast<void*>(reinterpret_cast<const void*>(&_t5)), const_cast<void*>(reinterpret_cast<const void*>(&_t6)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void EQPacketStream::closing(uint32_t _t1, EQStreamID _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}

// SIGNAL 4
void EQPacketStream::sessionTrackingChanged(uint8_t _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 4, _a);
}

// SIGNAL 5
void EQPacketStream::lockOnClient(in_port_t _t1, in_port_t _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 5, _a);
}

// SIGNAL 6
void EQPacketStream::sessionKey(uint32_t _t1, EQStreamID _t2, uint32_t _t3)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 6, _a);
}

// SIGNAL 7
void EQPacketStream::cacheSize(int _t1, int _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 7, _a);
}

// SIGNAL 8
void EQPacketStream::seqReceive(int _t1, int _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 8, _a);
}

// SIGNAL 9
void EQPacketStream::seqExpect(int _t1, int _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 9, _a);
}

// SIGNAL 10
void EQPacketStream::numPacket(int _t1, int _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 10, _a);
}

// SIGNAL 11
void EQPacketStream::resetPacket(int _t1, int _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 11, _a);
}

// SIGNAL 12
void EQPacketStream::maxLength(int _t1, int _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 12, _a);
}
QT_END_MOC_NAMESPACE
